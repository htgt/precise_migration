#!/usr/bin/make -rf

EPD_PLATE_NAME        :=
PROFILE               :=
PLATE_MAP             :=
USER                  :=
SEQUENCING_PROJECTS   := $(shell qc list-trace-projects $(EPD_PLATE_NAME))
TEMPLATE_PLATE        := T$(EPD_PLATE_NAME)
CONFIG                := ${HTGT_QC_CONF}
DEBUG                 := --debug
RUN_ID                := $(shell qc generate-run-id)
BASE_DIR              := /nfs/team87/data/qc/work
WORK_DIR              := $(BASE_DIR)/$(RUN_ID)
TEMPLATE_PARAMS       := $(WORK_DIR)/template.yaml
LIMS2_TEMPLATE_PARAMS := $(WORK_DIR)/lims2_template.yaml
ENG_SEQ_DIR           := $(WORK_DIR)/eng_seqs
SEQ_READS             := $(patsubst %,$(WORK_DIR)/%.reads.fasta, $(SEQUENCING_PROJECTS))
EXONERATE_OUT         := $(patsubst %,$(WORK_DIR)/%.exonerate, $(SEQUENCING_PROJECTS))
ANALYSIS_OUT          := $(patsubst %,$(WORK_DIR)/%.analysis, $(SEQUENCING_PROJECTS))
PRE_FILTER_OUT        := $(patsubst %,$(WORK_DIR)/%.alignments.yaml, $(MERGED_SEQUENCING_PROJECTS))
POST_FILTER_OUT       := $(WORK_DIR)/post-filter
REPORT_CSV            := $(WORK_DIR)/report.csv
REPORT_ZIP            := $(WORK_DIR)/report.zip

all:

init: $(WORK_DIR)/init

fetch-template-data: $(TEMPLATE_PARAMS)

persist-template: $(LIMS2_TEMPLATE_PARAMS)

write-eng-seqs: $(ENG_SEQ_DIR)

fetch-seq-reads: $(SEQ_READS)

align-reads: $(EXONERATE_OUT)

run-analysis: $(ANALYSIS_OUT)

pre-filter: $(PRE_FILTER_OUT)

post-filter: $(POST_FILTER_OUT)

report: $(REPORT_ZIP) $(REPORT_CSV)

persist-qc-run: $(WORK_DIR)/persist_qc_run

persist-seq-reads: $(WORK_DIR)/persist_seq_reads

persist: $(WORK_DIR)/persist

$(WORK_DIR)/init:
	test -n "$(RUN_ID)"
	mkdir -p $(dir $@)
	touch $@

$(TEMPLATE_PARAMS): $(WORK_DIR)/init
	test -n "$(PROFILE)"
	test -n "$(TEMPLATE_PLATE)"
	test "$(TEMPLATE_PLATE)" != "T"
	rm -rf $@-t
	qc fetch-template-data-htgt --config $(CONFIG) --profile $(PROFILE) $(DEBUG) \
		--output-file $@-t --stage allele $(TEMPLATE_PLATE)
	mv $@-t $@

$(LIMS2_TEMPLATE_PARAMS): $(TEMPLATE_PARAMS)
	rm -rf $@-t
	qc persist-template-lims2 --config $(CONFIG) $(DEBUG) --output-file $@-t $(TEMPLATE_PARAMS)
	mv $@-t $@

$(ENG_SEQ_DIR): $(LIMS2_TEMPLATE_PARAMS)
	test -n "$(PROFILE)"
	rm -rf $@-t
	qc write-eng-seqs --config $(CONFIG) --profile $(PROFILE) $(DEBUG) \
		--output-dir $@-t $(LIMS2_TEMPLATE_PARAMS)
	mv $@-t $@

$(WORK_DIR)/%.reads.fasta: $(WORK_DIR)/init
	test -n "$(PROFILE)"
	rm -f $@-t
	qc fetch-seq-reads-archive --config $(CONFIG) --profile $(PROFILE) $(DEBUG) \
		 --output-file $@-t $*
	mv $@-t $@

$(WORK_DIR)/%.exonerate: $(WORK_DIR)/%.reads.fasta $(ENG_SEQ_DIR)
	test -n "$(PROFILE)"
	rm -rf $@-t
	qc align-reads-exonerate --config $(CONFIG) --profile $(PROFILE) $(DEBUG) \
		--reads $< --output-dir $@-t $(wildcard $(ENG_SEQ_DIR)/*.fasta)
	mv $@-t $@

$(WORK_DIR)/%.alignments.yaml: $(WORK_DIR)/%.exonerate
	test -n "$(PROFILE)"
	rm -rf $@-t
	qc pre-filter-score --config $(CONFIG) --profile $(PROFILE) $(DEBUG) \
		--output-file $@-t $(wildcard $</*.out)
	mv $@-t $@

$(WORK_DIR)/%.analysis: $(WORK_DIR)/%.reads.fasta $(WORK_DIR)/%.alignments.yaml $(ENG_SEQ_DIR) $(LIMS2_TEMPLATE_PARAMS)
	test -n "$(PROFILE)"
	rm -rf $@-t
	qc run-analysis --config $(CONFIG) --profile $(PROFILE) $(DEBUG) \
		--seq-reads $< --output-dir $@-t --eng-seqs $(ENG_SEQ_DIR) \
		--template-params $(LIMS2_TEMPLATE_PARAMS) $(WORK_DIR)/$*.alignments.yaml
	mv $@-t $@

$(POST_FILTER_OUT): $(ANALYSIS_OUT)
	test -n "$(PROFILE)"
	rm -rf $@-t
	qc post-filter-es-cell --config $(CONFIG) --profile $(PROFILE) $(DEBUG) \
		--output-dir $@-t $^
	mv $@-t $@

$(REPORT_CSV): $(POST_FILTER_OUT)
	test -n "$(PROFILE)"
	rm -rf $@-t
	qc generate-report-full --config $(CONFIG) --profile $(PROFILE) $(DEBUG) \
		--analysis $< --output-file $@-t
	mv $@-t $@


%.zip: %.csv
	rm -rf $@-t
	zip $@-t $<
	mv $@-t $@

$(WORK_DIR)/persist_qc_run: $(POST_FILTER_OUT)
	test -n "$(PROFILE)"
	test -n "$(TEMPLATE_PLATE)"
	test -n "$(SEQUENCING_PROJECTS)"
	test -n "$(USER)"
	test -n "$(RUN_ID)"
	qc persist-lims2-qc-run --config $(CONFIG) --profile $(PROFILE) $(DEBUG) \
		--run-id $(RUN_ID) --lims2-template-file $(LIMS2_TEMPLATE_PARAMS) \
		--created-by $(USER) \
		$(patsubst %,--sequencing-project %,$(SEQUENCING_PROJECTS))
	touch $@

$(WORK_DIR)/persist_seq_reads: $(WORK_DIR)/persist_qc_run
	test -n "$(PROFILE)"
	test -n "$(RUN_ID)"
	qc persist-lims2-seq-reads --config $(CONFIG) --profile $(PROFILE) $(DEBUG) \
		--run-id $(RUN_ID) \
		$(patsubst %,--sequencing-project %,$(SEQUENCING_PROJECTS)) \
		$(patsubst %,--seq-reads %,$(SEQ_READS)) \
		$(patsubst %,--plate-map %,$(PLATE_MAP)) 
	touch $@

$(WORK_DIR)/persist: $(WORK_DIR)/persist_seq_reads
	test -n "$(PROFILE)"
	test -n "$(SEQUENCING_PROJECTS)"
	test -n "$(RUN_ID)"
	qc persist-lims2-test-results --config $(CONFIG) --profile $(PROFILE) $(DEBUG) \
		--run-id $(RUN_ID) --lims2-template-file $(LIMS2_TEMPLATE_PARAMS) \
		--analysis-dir $(POST_FILTER_OUT) --created-by $(USER) \
	    $(patsubst %,--sequencing-project %,$(SEQUENCING_PROJECTS))
	touch $@
