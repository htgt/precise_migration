#
# CTRAP   (methods for accessing CAS)
#
# Author: Lucy Stebbings (las)
#
#

use strict;

package CTRAP;
use SqlEngine2;
use Carp;
 
#use constant CAS_LOGIN_RW => 'tcas_finch';
#use constant CAS_LOGIN_RW_LIVE => 'cas_finch';
use constant CAS_LOGIN => 'reports';

#
# Constructor
#
sub new
{
	my $class = shift;
	my %args = @_;

	my $self = {};

	$self->{-login} = $args{-login};

	$self->{se3} = new SqlEngine2();
	$self->{dbh3} = SqlEngine2::getDbh($self->{-login});
	bless $self, $class;
	return $self;
}

#--------------------------------------------------------------------------#
sub se {
    my $self = shift;
    return($self->{se3});
}
#--------------------------------------------------------------------------#
sub dbh {
    my $self = shift;
    return($self->{dbh3});
}
#--------------------------------------------------------------------------#
sub getIdSourcePlateMapFromName {

    my $pkg = shift;
    my %args = @_;

    my ($result) = $pkg->{se3}->getRow('CTRAP::getIdSourcePlateMapFromName', [$args{-samplename}],$pkg->{dbh3});

    return($result);
}
#--------------------------------------------------------------------------#
sub getSeqProjects {

    my $pkg = shift;
    my %args = @_;

    my $result = $pkg->{se3}->getAll('CTRAP::getSeqProjects', [],$pkg->{dbh3});

    return($result);
}
#--------------------------------------------------------------------------#

# just thinking about this...

# pass in...
# project
# date
# session id ?
# operator = 'las'?
# program = 'vector_t_seq'

sub setProjCloneLig {

    my $pkg = shift;
    my %args = @_;

    # pad the number to 5 digits and add MKOEU to the start
    my $project = 'MKOEU_' . (sprintf "%05d", $args{-project});
    print "project $project\n";

    # add a new project (Is this all I need to fill out? Which project type?)
     # PROJECTNAME = $project
     # ISPRIVATE = 0
     # FTP_DIRECTORY 
     # REMARK = 'autogenerated'
     # ID_ONLINE
     # INTERNAL_LENGTH_BP 
     # PROJECT_TYPE = 4?
     # EXT_DATABASE
     # EXT_PROJECT
     # EST_FINISHED_DATE
     # FINISHER_REMARK

    # add a new project status (leave last 3 fields null?)
     # PROJECTNAME = $project
     # STATUS = 1 (entered)
     # STATUSDATE = $date
     # ISCURRENT = 0
     # REMARK = 'autogenerated'
     # SESSIONID = will a generitrack session id do here (could clash), or should I leave it out
     # PROGRAM = 'my_script_name'
     # OPERATOR = is this the person who runs my script or someone at your end?
     # (last 4 fields can be null)

    # update the status (leave last 3 fields null?)
     # PROJECTNAME = $project
     # STATUS = 10 (library made)
     # STATUSDATE = $date
     # ISCURRENT = 1
     # REMARK = 'autogenerated'
     # SESSIONID = will a generitrack session id do here (could clash), or should I leave it out
     # PROGRAM = 'my_script_name'
     # OPERATOR = is this the person who runs my script or someone at your end?
     # (last 4 fields can be null)


    # add a new clone (same as project name) (What things go in the fields?)
     # CLONENAME  = $project
     # SPECIESNAME = 'synthetic_construct'
     # CHROMOSOME 
     # SOURCENAME = 'Textfile'
     # SEQUENCED_BY = 5?
     # FUNDED_BY = 1?
     # SEQ_REASON  = 1?
     # LIBRARYNAME = 'synthetic_construct_no_vector'
     # REMARK = 'autogenerated'
     # SUBREGION
     # IS_HSM = 0?
     # CLONE_TYPE = 1? (genomic clone?)
 
    # add a new clone_status (leave last 3 fields null?)
     # CLONENAME = $project  
     # STATUS = 1 (Created)
     # STATUSDATE = $date
     # ISCURRENT = 0
     # SESSIONID 
     # PROGRAM
     # OPERATOR   
     # (last 3 fields can be null)

    # update the status (leave last 3 fields null?)
     # CLONENAME = $project  
     # STATUS = 6 (Selected for sequencing)
     # STATUSDATE = $date
     # ISCURRENT = 1
     # SESSIONID 
     # PROGRAM
     # OPERATOR   
     # (last 3 fields can be null)

    # add a new entry to clone_project
     # CLONENAME = $project
     # PROJECTNAME = $project

    # add an entry to autoboxname (OK)
     # CLONENAME = $project
     # ROOT = $project . '-'
     # NEXT_VAL = 1

    # add an entry to ligation_batch (only do this once for the plate!)
    # pass back a ligbatch id and pass it in each time if there is one
     # unless (id_ligbatch) {
     # ID_LIGBATCH =
     # SEQ_VECTOR = 2548
     # (SEQ_VECTOR2)   
     # }

    # add an entry to ligation (OK)
     # ID_LIGATION =
     # ID_FRAGBAND
     # ID_LIGBATCH = $id_ligbatch
     # VOLUME = -1
     # POSITIVE
     # NEGATIVE
     # COMMENTS = 'autogenerated'
     # CLONENAME = $project

    # add an entry to ligation_status (leave last 3 fields null?)
     # ID_LIGATION =
     # STATUS = 1 (Created)
     # STATUSDATE = $date
     # ISCURRENT = 1
     # SESSIONID 
     # PROGRAM
     # OPERATOR 
     # (last 3 fields can be null)

}

#--------------------------------------------------------------------------#

# begin a transaction
#
sub beginCasTransaction
{
	my $self = shift;
	print "Begining cas transaction\n";
	$self->{se3}->beginTransaction($self->{dbh3});
}

#
# roll back a transaction
#

#------------------------------------------------------------------------------------------------#

sub rollbackCasTransaction
{
	my $self = shift;
	print "Rollback cas transaction\n";
	$self->{se3}->rollbackTransaction($self->{dbh3});
}

#------------------------------------------------------------------------------------------------#

#
# commit a transaction
#
sub commitCasTransaction
{
	my $self = shift;
	print "Commit cas transaction\n";
	$self->{se3}->commitTransaction($self->{dbh3});
}

#------------------------------------------------------------------------------------------------#

1;

