.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "COVER 1"
.TH COVER 1 "2013-06-01" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
cover \- report coverage statistics
.SH "VERSION"
.IX Header "VERSION"
version 1.04
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 10
\& cover \-help \-info \-version
\&       \-summary \-report report_format \-outputdir dir
\&       \-select filename \-ignore filename
\&       \-select_re RE \-ignore_re RE
\&       \-write [db] \-delete \-dump_db \-launch
\&       \-silent
\&       \-coverage criterion
\&       \-test \-gcov
\&       \-make [make]
\&       \-add_uncoverable_point \-delete_uncoverable_point
\&       \-clean_uncoverable_points \-uncoverable_file
\&       [report specific options]
\&       coverage_database [coverage_database ...]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Report coverage statistics in a variety of formats.
.PP
The summary option produces a short textual summary.  Other reports are
available by using the report option.
.PP
The following reports are currently available:
.PP
.Vb 4
\& text                  \- detailed textual summary
\& html                  \- detailed HTML reports
\& html_basic            \- detailed HTML reports with syntax highlighting
\& compilation           \- output in a format similar to Perl
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
The following command line options are supported:
.PP
.Vb 3
\& \-h \-help              \- show help
\& \-i \-info              \- show documentation
\& \-v \-version           \- show version
\&
\& \-silent               \- don\*(Aqt print informational messages (default off)
\& \-summary              \- give summary report                (default on)
\& \-report report_format \- report format                      (default html)
\& \-outputdir            \- directory for output               (default db)
\& \-launch               \- launch report in viewer (if avail) (default off)
\&
\& \-select filename      \- only report on the file            (default all)
\& \-ignore filename      \- don\*(Aqt report on the file           (default none)
\& \-select_re RE         \- append to REs of files to select   (default none)
\& \-ignore_re RE         \- append to REs of files to ignore   (default none)
\& \-write [db]           \- write the merged database          (default off)
\& \-delete               \- drop database(s)                   (default off)
\& \-dump_db              \- dump database(s) (for debugging)   (default off)
\&
\& \-coverage criterion   \- report on criterion  (default all available)
\&
\& \-test                 \- drop database(s) and run make test (default off)
\& \-gcov                 \- run gcov to cover XS code     (default on if using gcc)
\& \-make make_prog       \- use the given \*(Aqmake\*(Aq program for \*(Aqmake test\*(Aq
\&
\& other options specific to the report format
.Ve
.SH "REPORT FORMATS"
.IX Header "REPORT FORMATS"
Tool accepts \-report option:
.IP "html|html_minimal (default)" 4
.IX Item "html|html_minimal (default)"
\&\s-1HTML\s0 reporting. Percentage thresholds are color-coded and configurable
via \-report_c0 <integer>, \-report_c1 <integer> and \-report_c2 <integer>.:
.Sp
.Vb 4
\&    0%      75%      90%      100%
\&    |   ..   |   ..   |   ..   |
\&       <c0      <c1      <c2   c3
\&       red     yellow   orange green
.Ve
.IP "html_basic" 4
.IX Item "html_basic"
\&\s-1HTML\s0 reporting with syntax highlighting if \s-1PPI::HTML\s0 or Perl::Tidy
module is detected. Like html|html_minimal reporting, percentage thresholds
are color-coded and configurable.
.IP "text" 4
.IX Item "text"
Plain text reporting.
.IP "compilation" 4
.IX Item "compilation"
Like text but hacked to give a minimal output in a format similar
to that output by Perl itself so that it's easier to step through
the untested locations with Emacs compilation mode.
.SH "DETAILS"
.IX Header "DETAILS"
Any number of coverage databases may be specified on the command line.
These databases will be merged and the reports will be based on the
merged information.  If no databases are specified the default database
(cover_db) will be used.
.PP
The \-write option will write out the merged database.  If no name is
given for the new database, the first database read in will be
overwritten.  When this option is used no reports are generated by
default.
.PP
Specify \-select and \-ignore options to report on specific files.
.PP
Specify \-coverage options to report on specific criteria.  By default all
available information on all criteria in all files will be reported.
Available coverage options are statement, branch, condition, subroutine, and
pod.  However, if you know you only want coverage information for certain
criteria it is better to only collect data for those criteria in the first
place by specifying them at that point.  This will make the data collection
and reporting processes faster and less memory intensive.  See the
documentation for Devel::Cover for more information.
.PP
The \-test option will delete the databases and run your tests to generate
new coverage data before reporting on it.  Devel::Cover knows how to work
with standard Perl Makefiles as well as Module::Build based distributions.
For detailed instructions see the documentation for ExtUtils::MakeMaker at
<https://metacpan.org/module/ExtUtils::MakeMaker> or for Module::Build at
<https://metacpan.org/module/Module::Build> both of which come as standard
in recent Perl distributions.
.PP
The \-gcov option will try to run gcov on any \s-1XS\s0 code.  This requires that
you are using gcc of course.  If you are using the \-test option will be
turned on by default.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
The following exit values are returned:
.PP
0   All operations were completed successfully.
.PP
>0  An error occurred.
.PP
With the \-test option the exit status of the underlying test run is retuened.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.Vb 1
\& L<Devel::Cover>
.Ve
.SH "BUGS"
.IX Header "BUGS"
Did I mention that this is alpha code?
.PP
See the \s-1BUGS\s0 file.
.SH "LICENCE"
.IX Header "LICENCE"
Copyright 2001\-2013, Paul Johnson (paul@pjcj.net)
.PP
This software is free.  It is licensed under the same terms as Perl itself.
.PP
The latest version of this software should be available from my homepage:
http://www.pjcj.net
